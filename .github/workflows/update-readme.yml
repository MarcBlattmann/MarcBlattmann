name: Update README

on:
  schedule:
    - cron: '0 * * * *'  # Every hour
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install Markscribe
        run: go install github.com/taciturnaxolotl/markscribe@latest

      - name: Generate README
        env:
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
        run: |
          # Fetch Hackatime data and create custom stats
          echo "Fetching Hackatime data..."
          STATS=$(curl -s -H "Authorization: Bearer ${{ secrets.WAKATIME_API_KEY }}" \
                  "https://hackatime.hackclub.com/api/hackatime/v1/users/current/stats/last_7_days")
          
          # Extract languages and create progress bars
          python3 << 'EOF'
          import json
          import sys
          import os
          
          # Read the API response
          stats_json = os.environ.get('STATS', '{}')
          try:
              data = json.loads(stats_json)
              languages = data.get('data', {}).get('languages', [])
              
              # Create language bars
              print("### ðŸ’» Most Used Coding Languages (last 7 days)")
              print()
              
              for i, lang in enumerate(languages[:5]):  # Top 5 languages
                  name = lang['name']
                  percent = lang['percent']
                  time_text = lang['text']
                  
                  # Create a simple progress bar
                  filled = int(percent / 5)  # Scale to 20 chars max
                  bar = 'â–ˆ' * filled + 'â–‘' * (20 - filled)
                  
                  print(f"{name:<12} {bar} {percent:5.1f}% ({time_text})")
              
          except Exception as e:
              print("### ðŸ’» Most Used Coding Languages (last 7 days)")
              print()
              print("*Unable to fetch coding stats*")
              print(f"Error: {e}")
          EOF
          
          # Generate base README and append stats
          cp README.template.md temp_readme.md
          
          # Replace the placeholder with actual stats
          python3 << 'EOF'
          import json
          import os
          
          # Read the API response
          stats_json = os.environ.get('STATS', '{}')
          
          try:
              data = json.loads(stats_json)
              languages = data.get('data', {}).get('languages', [])
              
              # Create language bars
              stats_content = "### ðŸ’» Most Used Coding Languages (last 7 days)\n\n"
              
              for lang in languages[:5]:  # Top 5 languages
                  name = lang['name']
                  percent = lang['percent']
                  time_text = lang['text']
                  
                  # Create a simple progress bar
                  filled = int(percent / 5)  # Scale to 20 chars max
                  bar = 'â–ˆ' * filled + 'â–‘' * (20 - filled)
                  
                  stats_content += f"{name:<12} `{bar}` {percent:5.1f}% ({time_text})\n"
              
              # Read template and replace placeholder
              with open('temp_readme.md', 'r') as f:
                  content = f.read()
              
              content = content.replace('### ðŸ’» Most Used Coding Languages (last 7 days)\n\n*WakaTime stats will be added once API integration is resolved*', stats_content.strip())
              
              # Write final README
              with open('README.md', 'w') as f:
                  f.write(content)
                  
          except Exception as e:
              # Fallback: just copy template
              with open('temp_readme.md', 'r') as f:
                  content = f.read()
              with open('README.md', 'w') as f:
                  f.write(content.replace('*WakaTime stats will be added once API integration is resolved*', '*Unable to fetch coding stats*'))
          EOF
          
          rm temp_readme.md

      - name: Commit and Push if Changed
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add README.md
          git diff --cached --quiet || git commit -m "chore: update README"
          git push
